spring.application.name=order-service
order-service.version=v1.0

server.port=8082

# PostgreSQL Configuration for Docker
spring.datasource.url=jdbc:postgresql://postgres_order:5432/order-service
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate DDL Mode
spring.jpa.hibernate.ddl-auto=none

# Flyway Migration Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# Inventory Service URL for Docker
inventory.service.url=http://inventory-service:8083

# Swagger Configuration
springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/api-docs

# Debugging
debug=false

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=count_based
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#entire request
resilience4j.timelimiter.instances.inventory.timeout-duration=7s
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5

resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s
#1 each retry
#Kafka Producer Properties
spring.kafka.bootstrap-servers=broker:9092
spring.kafka.template.default-topic=order-placed

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping=event:ca.gbc.orderservice.event.OrderPlacedEvent

spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://schema-registry:8081

